@using EInvoice.Common.DTO
@model ClientDTO
@{
    ViewData["Title"] = Model.Id == 0 ? "Add Client" : "Edit Client";
}

<div class="container mt-5">
    <h2>@ViewData["Title"]</h2>

    @using (Html.BeginForm("Upsert", "Client", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.Id)

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.NTNCNIC)
            @Html.TextBoxFor(m => m.NTNCNIC, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NTNCNIC, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.BusinessName)
            @Html.TextBoxFor(m => m.BusinessName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BusinessName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.Province)
            @Html.TextBoxFor(m => m.Province, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.Address)
            @Html.TextAreaFor(m => m.Address, new { @class = "form-control", rows = 3 })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.RegistrationType)
            @Html.DropDownListFor(m => m.RegistrationType,
                     new SelectList(new[] { "Registered", "Unregistered" }),
                     "-- Select Type --",
                     new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RegistrationType, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary mt-3">Save</button>
    }
</div>
