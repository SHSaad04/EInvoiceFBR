@using EInvoice.Common.DTO
@model ProductDTO

@{
    ViewData["Title"] = Model.Id == 0 ? "Add Product" : "Edit Product";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>

    <form asp-action="Upsert" method="post">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.OrganizationId)

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.productDescription)
            @Html.TextAreaFor(m => m.productDescription, new { @class = "form-control", rows = 3 })
            @Html.ValidationMessageFor(m => m.productDescription, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.HsCode)
            @Html.TextBoxFor(m => m.HsCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.HsCode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.UoM, "Unit of Measurement")
            @Html.TextBoxFor(m => m.UoM, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UoM, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.FixedNotifiedValueOrRetailPrice)
            @Html.TextBoxFor(m => m.FixedNotifiedValueOrRetailPrice, new { @class = "form-control", type = "number", step = "0.01" })
            @Html.ValidationMessageFor(m => m.FixedNotifiedValueOrRetailPrice, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mt-3">
            @Html.LabelFor(m => m.Rate)
            @Html.TextBoxFor(m => m.Rate, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Rate, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-success mt-4">Save</button>
        <a asp-controller="Product" asp-action="Index" class="btn btn-secondary mt-4">Cancel</a>
    </form>
</div>
